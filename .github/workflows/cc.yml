name: C++

on:
    push:
        paths:
        - '.github/workflows/cc.yml'
        - 'cc/**'
        - '!cc/README.md'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 8
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, macos-latest]
        cpp-std: [c++14, c++17]

    steps:
    - uses: actions/checkout@v1
    - name: Set up C++ compiler on Ubuntu
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install cmake g++ make unzip wget
    - name: Set up C++ compiler on Mac OS
      if: matrix.os == 'macos-latest'
      run: |
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install gcc make unzip wget
        brew upgrade cmake
    - name: Install gtest
      env:
        GTEST_VERSION: 1.10.0
      run: |
        wget --no-check-certificate https://github.com/google/googletest/archive/release-${GTEST_VERSION}.zip -O gtest.zip
        unzip gtest.zip
        cd googletest-release-${GTEST_VERSION}
        mkdir build
        cd build
        cmake ..
        make -j8
        sudo make install
        rm -rf gtest.zip googletest-release-${GTEST_VERSION}
    - name: Test with gtest
      run: |
        mkdir -p bin
        g++ -std=${{ matrix.cpp-std }} cc/test_wc.cc cc/wc.cc -I cc/ -l gmock -l gtest -l gtest_main -l pthread -o bin/test
        bin/test
    - name: Run example
      run: |
        mkdir -p bin
        g++ -std=${{ matrix.cpp-std }} cc/main.cc cc/wc.cc -I cc/ -o bin/main
        bin/main
